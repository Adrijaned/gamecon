<?php
	$dbhost = $DATABASE_SERVER;
	$dbname = $DATABASE_NAME;
	$dbuser = $DATABASE_USER;
	$dbpass = $DATABASE_PASSWORD;
	$spojeni=NULL;
	$dbLastQ='';     //vztahuje se pouze na dotaz v aktualnim skriptu
	$dbNumQ=0;       //počet dotazů do databáze
	$dbExecTime=0.0; //délka výpočtu dotazů

function showerror()
{
	die("Error " . mysql_errno() . " : " . mysql_error());
}

function pripojDB()
{
  dbConnect();
}

/**
 * Sanitizes and returns safe name for column
 */ 
function dbCol($name)
{
  return '`'.addslashes($name).'`';
}

function dbConnect()
{
  global $dbhost, $dbname, $dbuser, $dbpass, $spojeni;
  if($spojeni==NULL)
  {
    $start=microtime(true);
    $spojeni=mysql_connect($dbhost, $dbuser, $dbpass);
    if(!$spojeni) die(mysql_error($spojeni));
    mysql_select_db($dbname, $spojeni);
    mysql_query("SET NAMES utf8", $spojeni);
    $end=microtime(true);
    $GLOBALS['dbExecTime']+=$end-$start;
  }
}

function dbLastId()
{
  return mysql_insert_id($GLOBALS['spojeni']);
}

function dbInsert($table,$valArray)
{
  global $spojeni, $dbLastQ;
  dbConnect();
  $sloupce='';
  $hodnoty='';
  foreach($valArray as $sloupec => $hodnota)
  {
    if($hodnota==NULL)
    {
      $sloupce.=$sloupec.',';
      $hodnoty.='NULL,';
    }    
    else
    {
      $sloupce.=$sloupec.',';
      if(!get_magic_quotes_gpc()) //vstup není slashován
        $hodnota=addslashes($hodnota);
      $hodnoty.='"'.$hodnota.'",';
    }  
  }
  $sloupce=substr($sloupce,0,-1); //useknutí přebytečné čárky na konci
  $hodnoty=substr($hodnoty,0,-1);
  $q='INSERT INTO '.$table.' ('.$sloupce.') VALUES ('.$hodnoty.')';
  $dbLastQ=$q;
  if(!mysql_query($q,$spojeni))
    die(mysql_error($spojeni).'<br />'.$q); 
}


/** Insert with actualisation */
function dbInsertUpdate($table,$valArray)
{
  global $dbspojeni, $dbLastQ;
  dbConnect();
  $update='INSERT INTO '.$table.' SET ';
  $dupl=' ON DUPLICATE KEY UPDATE ';
  $vals='';
  foreach($valArray as $key=>$val)
  {
    if($val!==NULL)
      $vals.=$key.'="'.(get_magic_quotes_gpc()?$val:addslashes($val)).'", ';
  }
  $vals=substr($vals,0,-2); //odstranění čárky na konci
  $q=$update.$vals.$dupl.$vals; 
  $dbLastQ=$q;
  $start=microtime(true);
  $r=mysql_query($q,$GLOBALS['spojeni']);
  $end=microtime(true);
  if(!$r)
  {
    dbShowError();
    //print(mysql_error($GLOBALS['spojeni'])."<br>".$q);
    throw new Exception('DB: '.mysql_error($GLOBALS['spojeni']));
  }
}


function dbQuery($q1,$q2=null,$q3=null)
{
  global $spojeni,$dbLastQ;
  if($q2) //používáme přístup jako k mysql_db_query - sql dotaz je 2. parametr
    $q=$q2;
  else //klasický přístup pouze s jedním parametrem - dotazem
    $q=$q1;
  dbConnect();
  $dbLastQ=$q; //echo($q.'<br /><br />'."\n\n");
  $start=microtime(true);
  $r=mysql_query($q,$GLOBALS['spojeni']);
  $end=microtime(true);
  if(!$r)
  {
    echo('<pre>'.mysql_error($GLOBALS['spojeni']).'<br />'.$q);
    throw new Exception('Chyba databáze');
  }
  $GLOBALS['dbNumQ']++;
  $GLOBALS['dbExecTime']+=$end-$start;  
  return $r; 
}

/** Dotaz s nahrazováním jmen proměnných, pokud je nastaveno pole, tak jen z 
 *  pole ve forme $0 $1 atd resp $index */
function dbQueryS($q,$pole=null)
{
  if(isset($pole) && is_array($pole))
  {
    $delta = strpos($q, '$0')===false ? -1 : 0; // povolení číslování $1, $2, $3...
    return dbQuery(
      preg_replace_callback('~\$([0-9]+)~', function($m)use($pole,$delta){
        return '"'.addslashes($pole[$m[1]+$delta]).'"';
      },$q)
    );
  }
  else
  {
    return dbQuery(
      preg_replace_callback('~\$([a-zA-Z]+)~', function($m){
        return '"'.addslashes($GLOBALS[$m[1]]).'"';
      },$q)
    );
  }
}

/**
 * Quotes input values for DB. Nulls are passed as real NULLs, other values as
 * strings. Quotes $val as value
 */
function dbQv($val)
{
  if($val===null)
    return 'NULL';
  else
    return '"'.( get_magic_quotes_gpc() ? $val : addslashes($val) ).'"';
}

/**
 * Quotes $val as identifier
 */ 
function dbQi($val)
{
  return '`'.( get_magic_quotes_gpc() ? $val : addslashes($val) ).'`';
}

/**
 * For selecting single-line one column values
 */
function dbOneCol($q)
{
  $a=dbOneLine($q);
  return current($a);
} 

/** Intended for selecting single lines from whatever. If no line found, returns
 *  false, otherwise returns asociative array with one line. If multiple lines
 *  found, causes crash. */
function dbOneLine($q)
{
  $r=dbQuery($q);
  if(mysql_num_rows($r)>1) die('multiple lines matched!');
  elseif(mysql_num_rows($r)<1) return FALSE;
  else return mysql_fetch_assoc($r);
}

/** Single line selector with substitution
 *  @see dbQueryS */
function dbOneLineS($q,$array=null)
{
  $r=dbQueryS($q,$array);
  if(mysql_num_rows($r)>1) die('multiple lines matched!');
  elseif(mysql_num_rows($r)<1) return FALSE;
  else return mysql_fetch_assoc($r);
}

/** Alias for associative row fetch */
function dbFetch($a)
{
  return mysql_fetch_assoc($a);
}

/* return last query */
function dbLastQ()
{
  global $dbLastQ;
  return $dbLastQ;
}

/**
 * Executes update on table $table using associtive array $vals as column=>value
 * pairs and $where as column=>value AND column=>value ... where clause
 */  
function dbUpdate($table,$vals,$where)
{
  global $dbspojeni, $dbLastQ;
  dbConnect();
  $q='UPDATE '.dbQi($table)." SET \n";
  foreach($vals as $key=>$val)
    $q.=( dbQi($key).'='.dbQv($val).",\n" );
  $q=substr($q,0,-2)."\n"; //odstranění čárky na konci
  $q.='WHERE '.dbQi(reset(array_keys($where))).'='.dbQv(reset($where)).';';
  // query execution
  $dbLastQ=$q;
  $start=microtime(true);
  $r=mysql_query($q,$GLOBALS['spojeni']);
  $end=microtime(true);
  if(!$r){
    dbShowError();
    throw new Exception('DB: '.mysql_error($GLOBALS['spojeni'])); }
}

function dbNumQ() { return $GLOBALS['dbNumQ']; }

function dbExecTime() { return $GLOBALS['dbExecTime']; }

function dbShowError() 
{
  echo '<pre>'.mysql_error($GLOBALS['spojeni']).'</pre><pre style="white-space:pre-wrap;text-indent:-16px;margin-left:16px">'.dbLastQ().'</pre>';
}

?>
